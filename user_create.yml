#Ansible Playbook
#User Creation

#command to execute: ansible playbook -v -i /etc/ansible/hosts user_create.yml --ask-become-pass

    - hosts: workstations
      user: <user>
      become: yes
      become_method: sudo
      become_user: root
      gather_facts: yes
      tasks:

        - name: Creating "TEST" group
          remote_user: root #or a user who has root access#
          become: yes
          become_method: sudo
          group:
             name: TEST
             gid: 2010
             state: present

        - name: Adding user "TEST" to TEST group         
          user:
            name: TEST
            password: '$6$58wtQJB3a$N8AG9hCnaxlJYSL1draFV18ybepFOync83uGAR64YdKHZY31l0Eg6ze1mCVUPJvafqRinaAViltfYRU/5ph5g1'
            comment: "TEST"
            uid: 2001
            groups:
             - sudo
             - TEST
            state: present
            append: yes
            shell: /bin/bash
            generate_ssh_key: yes
            ssh_key_bits: 2048
            ssh_key_file: .ssh/id_rsa
            system: no
            createhome: yes           
            home: /home/TEST 
            update_password: on_create
          
#        ALL USERNAME are first four of the lastname, first intial, middle intial
#        - name: Adding user "<NAME>" to TEST group
#          user: 
#            name: <lastname,firstintial,middleintial>
#            comment: "<username>"
#            uid: <200#>
#            group: TEST #use this if they are not a privileged user
#            groups:
#             - sudo
#             - TEST
#            append: yes
#            state: present
#            shell: /bin/bash
#            generate_ssh_key: yes
#            ssh_key_bits: 2048
#            ssh_key_file: .ssh/id_rsa
#            system: no
#            createhome: yes
#            home: /home/<username>
#            update_password: on_create

        - name: Add user "John Min" to TEST group
          user:
            name: minjs
            password: '$6$58wtQJB3a$N8AG9hCnaxlJYSL1draFV18ybepFOync83uGAR64YdKHZY31l0Eg6ze1mCVUPJvafqRinaAViltfYRU/5ph5g1'
            comment: "John Min"
            uid: 2002
            group: TEST
            groups:
              - sudo
              - TEST
            state: present
            append: yes
            shell: /bin/bash
            generate_ssh_key: yes
            ssh_key_bits: 2048
            ssh_key_file: .ssh/id_rsa
            system: no
            createhome: yes
            home: /home/minjs 
            update_password: on_create

#        - name: Forcing password change for user
#          remote_user: root #or root access user#
#          become: yes
#          become_method: sudo
#          become_user: root
#          command:
#           chage -d 0 TEST

        - name: Forcing password change for user "John Min"
          remote_user: root #or root access user#
          become: yes
          become_method: sudo
          become_user: root
          command:
           chage -d 0 minjs

#        - name: Forcing user "EXAMPLE" to set password to expire every 3 months and can only change password once every week
#          remote_user: root
#          become: yes
#          become_method: sudo
#          become_user: root
#          command:
#           chage -M 90 -m 7 -I 30 -W 14 <username>

        - name: Forcing user "John Min" to set password to expire every 3 months and can only change password once every week
          remote_user: root #or root access user#
          become: yes
          become_method: sudo
          become_user: root
          command:
           chage -M 90 -m 7 -I 30 -W 14 minjs

## UNDER CONSTRUCTION ##

#    - hosts: workstations
#      user: <uname>
#      become: yes
#      become_method: sudo
#      become_user: root
#      vars:
#            users: ['ansibletst'] #usernames ['user1','user2']
#            user_password_valid_time: 90

#      tasks:

#       - name: Check for users password validation time
#         shell: getent shadow "{{ item }}" | cut -d':' -f5
#         register: users_pw_valid
#         loop: users
#         change_when: False

#       - name: Set users password validation time
#         shell: chage -M "{{ user_password_valid_time }}" "{{ item['item'] }}"
#         loop: users_pw_valid.results
#         when: item.stdout is defined and item.stdout != {{ user_password_valid_time }}




